name: Drupal9 Base Tests

on:
  pull_request:

jobs:
  leia-tests:
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm
    strategy:
      matrix:
        leia-test:
          - examples/drupal9-base/README.md
        lando-version:
          - 3-dev
        os:
          - ubuntu-22.04
        node-version:
          - '16'

    steps:
      # Install deps and cache
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Install Yarn dependencies
        run: yarn install --prefer-offline --frozen-lockfile
      - name: Setup lando ${{ matrix.lando-version }}
        uses: lando/setup-lando@v2
        with:
          lando-version: ${{ matrix.lando-version }}
          config: |
            plugins.@lando/lagoon=/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          telemetry: false
      - name: Verify Lando works and we are dogfooding this plugin for tests
        run: |
          lando version
          lando config --path plugins | grep lagoon | grep /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }} || (echo "::error:: Not dogfooding this plugin correctly! " && exit 1)
      # This block should eventually become use lando/actions-leia@v2
      # @NOTE? Do we want a way for our leia-action to configure apparmor since
      # this might break a whole bunch of tests? or is this literally just a thing
      # for the Lagoon mysql/mariadb container?
      - name: Check tests are ok
        run: |
          ls -al ./examples/drupal9-base  
          cat ./examples/drupal9-base/README.md
          cat ${{ matrix.leia-test }}
      - name: Run Leia Tests
        uses: lando/run-leia-action@v2
        with:
          leia-test: ${{ matrix.leia-test }}
          setup-header: "Start up tests"
          cleanup-header: "Destroy tests"
          test-header: "Verification commands"
          retry: 3
          shell: bash
          lagoon-mode: true
          stdin: true
          debug: true
